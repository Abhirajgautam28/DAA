Question 1. 1 2 5 5 5 8 
         0 1 2 3 4 5
             f   i
            key=5;
            Sorted Array->duplicate elements
            Time Complexity=O(log n)
       
            return(i-f+1)
          = return(4-2+1)
          = return(3);
Question 2. 1 2 4 5 6 8
            0 1 2 3 4 5
            i, j, k
            such that-> a[i]+a[j]=a[k]
            i=0,a[i]=1             i+j=2+j=6
            j=1,a[j]=2                 1 2 4
            
            Answer:
            #include<iostream>
using namespace std;
void selectionSort(int a[], int n) {
   int i, j, min, temp;
   for (i = 0; i < n - 1; i++) {
      min = i;
      for (j = i + 1; j < n; j++)
      if (a[j] < a[min])
      min = j;
      temp = a[i];
      a[i] = a[min];
      a[min] = temp;
   }
}
int main() {
   int a[] = { 22, 91, 35, 78, 10, 8, 75, 99, 1, 67 };
   int n = sizeof(a)/ sizeof(a[0]);
   int i;
   cout<<"Given array is:"<<endl;
   for (i = 0; i < n; i++)
   cout<< a[i] <<" ";
   cout<<endl;
   selectionSort(a, n);
   printf("\nSorted array is: \n");
   for (i = 0; i < n; i++)
   cout<< a[i] <<" ";
   return 0;
}
question 3. 
                  1 5 3 4 2
                  0 1 2 3 4
                  key=3
                  i=0 to n
                  j=i+1 to n
